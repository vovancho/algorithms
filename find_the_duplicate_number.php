<?php
/**
 * $nums - целочисленный массив n + 1 (1, 2, 3.. в разном порядке), где каждое число в диапазоне [1, n]
 * Задача состоит в том, чтобы определить повторяющееся число не изменяя массив
 * Повторяющееся число в массиве или NULL, если его нет — это то, что нам нужно вернуть.
 */
class Solution {
    public function findDuplicate(array $nums): ?int
    {
        // инициализация указателей
        $slow = $nums[0];
        $fast = $nums[0];

        do {
            $slow = $nums[$slow]; // медленный указатель перемещается на один шаг
            $fast = $nums[$nums[$fast]]; // быстрый указатель перемещается на два шага
        } while ($slow !== $fast); // цикл продолжается до тех пор, пока оба указателя не встретятся в какой-то точке внутри цикла

        // после определения точки встречи внутри цикла мы повторно инициализируем медленный указатель
        $slow = $nums[0];
        // теперь оба указателя перемещаются на один шаг за раз
        // согласно алгоритму обнаружения цикла Флойда, когда оба указателя движутся с одинаковой скоростью, они в конечном итоге встретятся в начальной точке цикла
        // это и есть то самое повторяющееся число
        while ($slow !== $fast) {
            $slow = $nums[$slow];
            $fast = $nums[$fast];
        }

        return $slow;
    }
}

var_dump(
    (new Solution())->findDuplicate([4, 3, 1, 2, 2])
);

// output: int(2)
