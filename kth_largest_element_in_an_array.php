<?php
/**
 * $nums - целочисленный массив. $k - целое число.
 * Задача состоит в том, чтобы вычислить $k-тый наибольший элемент в массиве(в отсортированном порядке).
 * $k-тый наибольший элемент — это то, что нам нужно вернуть.
 */
class Solution
{
    // решение с использованием кучи
    public function findKthLargest(array $nums, int $k): int
    {
        // инициализируем кучу с сохранением минимального элемента наверху.
        $heap = new SplMinHeap();
        for ($i = 0; $i < count($nums); $i++) {
            // вставляем элементы в кучу
            $heap->insert($nums[$i]);

            // убираем из кучи значения больше $k-того элемента.
            // в SplMinHeap при извлечении элементы удаляются в отсортированном порядке по минимальному значению.
            if ($i > $k - 1) {
                $heap->extract();
            }
        }

        // извлекаем корень кучи с наибольшим $k-тым элементом.
        return $heap->extract();
    }

    // решение с использованием сортировки
    public function findKthLargest2(array $nums, int $k): int
    {
        // сортируем массив в обратном порядке.
        rsort($nums);

        return $nums[$k - 1];
    }
}

var_dump(
    (new Solution())->findKthLargest([3, 2, 3, 1, 2, 4, 5, 5, 6], 4)
);

// output: int(4)
// k: 1 => 6
// k: 2 => 5
// k: 3 => 5
// k: 4 => 4 <==
// k: 5 => 3
// k: 6 => 3
// k: 7 => 2
// k: 8 => 2
// k: 9 => 1
